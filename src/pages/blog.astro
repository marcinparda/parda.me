---
import type { CollectionEntry } from "astro:content";
import { getMonthAndDay } from "../utils/date";
import { getCollection } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";
const allPosts = await getCollection("posts");

const filterOutDraftsPosts = allPosts.filter(
  (post) => post.data.draft !== true
);

const postsSortedByDate = filterOutDraftsPosts.sort(
  (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()
);

const postsByYear = postsSortedByDate.reduce(
  (groupedPosts, post) => {
    const year = new Date(post.data.pubDate).getFullYear();
    if (!groupedPosts[year]) groupedPosts[year] = [];
    groupedPosts[year]!.push(post);
    return groupedPosts;
  },
  {} as Record<number, CollectionEntry<"posts">[]>
);
---

<BaseLayout pageTitle="Blog">
  <h1>Blogposts</h1>
  <a href="/blog.xml">Blog RSS</a>
  <hr class="mb-0" />
  {
    postsByYear &&
      Object.keys(postsByYear)
        .reverse()
        .map((year) => (
          <div class="grid grid-flow-col grid-cols-4 border-b">
            <span class="font-bold py-2">{year}</span>
            <div class="col-span-3">
              {postsByYear[Number(year)]!.map((post) => (
                <div>
                  <hr class="m-0 first:hidden" />
                  <a
                    href={`/blog/${post.id}/`}
                    class="not-prose flex justify-between gap-4 py-2 opacity-75 hover:opacity-100 transition-all"
                  >
                    <span>{post.data.title}</span>
                    <span>{getMonthAndDay(post.data.pubDate)}</span>
                  </a>
                </div>
              ))}
            </div>
          </div>
        ))
  }
</BaseLayout>
